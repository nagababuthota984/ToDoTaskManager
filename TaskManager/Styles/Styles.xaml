<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:cal ="http://www.caliburnproject.org"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls">

    <!--#region ColorBrushes -->
    <SolidColorBrush x:Key="TM.Colors.PrimaryColor" Color="#41B1E1"/>
    <SolidColorBrush x:Key="TM.Colors.LowPriority" Color="#00A4EF"/>
    <SolidColorBrush x:Key="TM.Colors.MediumPriority" Color="#FFB900"/>
    <SolidColorBrush x:Key="TM.Colors.HighPriority" Color="#D73A4A"/>
    <!--#endregion-->

    <!--#region TextBox Styles -->

    <Style x:Key="TM.TextBox.NameTextBox" TargetType="TextBox">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" 
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self}, 
                            Path=(Validation.Errors)/ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TM.TextBox.IsDigitOnlyError" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="MinWidth" Value="20"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="ToolTip" Value="Please enter a valid integer"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border" Background="#FFFFFF" BorderBrush="#888888" BorderThickness="1" >
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TM.TextBox.Default" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinWidth" Value="20"/>
        <Setter Property="Height" Value="25"/>

    </Style>
    <!--#endregion-->

    <!--#region Button Styles -->

    <Style x:Key="TM.Button.DefaultStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="DemiBold"/>

    </Style>

    <Style x:Key="TM.Button.TrayButton" TargetType="Button">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Padding" Value="3"/>
    </Style>

    <!--#endregion-->

    <!--#region TextBlock Styles -->

    <Style x:Key="TM.TextBlock.BoldLabels" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="DemiBold"/>
    </Style>

    <Style x:Key="TM.TextBlock.PrimaryHeading" TargetType="TextBlock">
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{StaticResource TM.Colors.PrimaryColor}"/>
        <Setter Property="Padding" Value="0 5 0 0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Padding" Value="5 0 0 0"/>
    </Style>

    <Style x:Key="TM.TextBlock.FormLabels" TargetType="TextBlock" BasedOn="{StaticResource TM.TextBlock.BoldLabels}">
        <Setter Property="Padding" Value="0 4 4 4"/>
        <Setter Property="Margin" Value="0 14 0 0"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="TM.TextBlock.TitleBarDbName" TargetType="TextBlock">
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="Margin" Value="4 4 0 4"/>
        <Setter Property="Padding" Value="2 2 0 2"/>
        <Setter Property="ToolBar.ToolTip" Value="Connected"/>

    </Style>

    <Style x:Key="TM.TextBlock.Wrap" TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <Style x:Key="TM.TextBlock.Trim" TargetType="TextBlock">
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
    </Style>

    <!--#endregion-->

    <!--#region Rectangle styles -->
    <Style x:Key="TM.PriorityIndicator" TargetType="Rectangle">
        <Setter Property="Width" Value="13"/>
        <Setter Property="Height" Value="13"/>
        <Setter Property="Margin" Value="4"/>
    </Style>

    <Style x:Key="TM.PriorityIndicator.Low" TargetType="Rectangle" BasedOn="{StaticResource TM.PriorityIndicator}">
        <Setter Property="Fill" Value="{StaticResource TM.Colors.LowPriority}"/>
    </Style>

    <Style x:Key="TM.PriorityIndicator.Medium" TargetType="Rectangle" BasedOn="{StaticResource TM.PriorityIndicator}">
        <Setter Property="Fill" Value="{StaticResource TM.Colors.MediumPriority}"/>
    </Style>

    <Style x:Key="TM.PriorityIndicator.High" TargetType="Rectangle" BasedOn="{StaticResource TM.PriorityIndicator}">
        <Setter Property="Fill" Value="{StaticResource TM.Colors.HighPriority}"/>
    </Style>
    <!--#endregion-->

    <!--#region ListBox Styles -->
    <Style x:Key="TM.ListBox.ListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Foreground" Value="{Binding Priority, Converter={StaticResource TM.Converters.PriorityToColorConverter}}"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border BorderBrush="DarkGray" BorderThickness="0.5" Background="#F6F5F9">
                        <ContentPresenter Margin="{TemplateBinding Margin}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Visibility="{TemplateBinding Visibility}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="TM.ListBox.DefaultListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
    </Style>

    <Style x:Key="TM.ListBox.NoNewTasksListBoxStyle" TargetType="ListBox" BasedOn="{StaticResource TM.ListBox.DefaultListBoxStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Image Source="/Images/tasks_new.png" 
                                Opacity="0.7"/>
                        <TextBlock Grid.Row="1" Style="{StaticResource TM.TextBlock.BoldLabels}" Text="The tasks you create will show up here!" FontSize="15" HorizontalAlignment="Center" Foreground="Gray"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="TM.ListBox.NoInProgressTasksListBoxStyle" TargetType="ListBox" BasedOn="{StaticResource TM.ListBox.DefaultListBoxStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Image Source="/Images/tasks_inprogress.png"
                                Opacity="0.7"/>
                        <TextBlock Grid.Row="1" Style="{StaticResource TM.TextBlock.BoldLabels}" Text="The tasks which are in progress will show up here!" FontSize="15" HorizontalAlignment="Center" Foreground="Gray"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="TM.ListBox.NoCompletedTasksListBoxStyle" TargetType="ListBox" BasedOn="{StaticResource TM.ListBox.DefaultListBoxStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Image Source="/Images/tasks_completed.png" 
                                Opacity="0.7"/>
                        <TextBlock Grid.Row="1" Style="{StaticResource TM.TextBlock.BoldLabels}" Text="Completed tasks will show up here!" FontSize="15" HorizontalAlignment="Center" Foreground="Gray"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->

    <!--</Style>-->
    <!--#endregion-->

    <!--#region RadioButton Styles -->

    <Style x:Key="TM.RadioButton.DefaultStyle" TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <!--#endregion-->

    <!--#region ToggleSwitch Styles-->
    <Style x:Key="TM.ToggleSwitch.DefaultStyle" TargetType="mah:ToggleSwitch">
        <Setter Property="Margin" Value="10 0 2 0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="50"/>
    </Style>
    <!--#endregion-->

    <!--#region Grid Styles -->

    <Style x:Key="TM.ListView.FormGrid" TargetType="Grid">
        <Setter Property="Background" Value="#F1F1F1"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Width" Value="410"/>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsTaskFormEnabled}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Visibility" Value="Visible"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TM.Grid.CardView" TargetType="Grid">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Opacity" Value="1"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsCardViewEnabled}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region Slider Styles-->

    <Style x:Key="TM.Slider.DefaultStyle" TargetType="Slider" >
        <Setter Property="IsSnapToTickEnabled" Value="True"/>
        <Setter Property="TickPlacement" Value="BottomRight"/>
        <Setter Property="TickFrequency" Value="20"/>
        <Setter Property="Maximum" Value="100"/>
        <Setter Property="Minimum" Value="0"/>
    </Style>

    <!--#endregion-->

    <!--#region Datagrid Styles -->


    <Style x:Key="TM.DataGrid.CellStyle" TargetType="DataGridCell">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="BorderBrush" Value="#F1F1F1"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TM.DataGrid.GroupHeaderStyle" TargetType="GroupItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupItem">
                    <Expander IsExpanded="True" >
                        <Expander.Style>
                            <Style TargetType="Expander">
                                <Setter Property="Background" Value="#F1F1F1"/>
                            </Style>
                        </Expander.Style>
                        <Expander.Header>
                            <WrapPanel Width="Auto">
                                <TextBlock Text="{Binding Path=Name}" FontSize="15" Foreground="{Binding Path=Name,Converter={StaticResource TM.Converters.PriorityToColorConverter}}"  Style="{StaticResource TM.TextBlock.BoldLabels}"/>
                                <TextBlock Text=" (" Foreground="{Binding Path=Name,Converter={StaticResource TM.Converters.PriorityToColorConverter}}" FontSize="15" Style="{StaticResource TM.TextBlock.BoldLabels}"/>
                                <TextBlock Text="{Binding Path=ItemCount}" FontSize="15" Foreground="{Binding Path=Name,Converter={StaticResource TM.Converters.PriorityToColorConverter}}" Style="{StaticResource TM.TextBlock.BoldLabels}"/>
                                <TextBlock Text=")" Foreground="{Binding Path=Name,Converter={StaticResource TM.Converters.PriorityToColorConverter}}" FontSize="15" Style="{StaticResource TM.TextBlock.BoldLabels}"/>
                            </WrapPanel>
                        </Expander.Header>
                        <Expander.Content>
                            <ItemsPresenter/>
                        </Expander.Content>
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TM.DataGrid.CellStyle.LeftAligned" TargetType="DataGridCell" BasedOn="{StaticResource TM.DataGrid.CellStyle}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
    </Style>


    <Style x:Key="TM.DataGrid.ColumnsHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="{StaticResource TM.Colors.PrimaryColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="DemiBold"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BackgroundBorder" BorderThickness="0,0,0,2"
                        Background="{StaticResource TM.Colors.PrimaryColor}"
                        BorderBrush="White"
                        Grid.ColumnSpan="2"/>
                        <ContentPresenter  VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <iconPacks:PackIconBootstrapIcons Name="SortAscIcon" Grid.Column="1" HorizontalAlignment="Right" Margin="7" Kind="SortDownAlt" Visibility="Collapsed"/>
                        <iconPacks:PackIconBootstrapIcons Name="SortDescIcon" Grid.Column="1" HorizontalAlignment="Right" Margin="7" Kind="SortDown" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortAscIcon" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortDescIcon" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TM.DataGrid.DefaultStyle" TargetType="DataGrid">
        <Setter Property="RowHeight" Value="35"/>
        <Setter Property="ItemsSource" Value="{Binding FilteredTasks}"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="AreRowDetailsFrozen" Value="True"/>
        <Setter Property="FrozenColumnCount" Value="2"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="ColumnWidth" Value="auto"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource TM.DataGrid.ColumnsHeaderStyle}"/>
        <Setter Property="CellStyle" Value="{StaticResource TM.DataGrid.CellStyle}"/>
        <Setter Property="Opacity" Value="1"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsTaskFormEnabled}" Value="True">
                <Setter Property="Opacity" Value="0.3"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TM.DataGrid.ColumnHeaderStyle.LeftAlignedColumn" TargetType="DataGridColumnHeader" BasedOn="{StaticResource TM.DataGrid.ColumnsHeaderStyle}">
        <Setter Property="Margin" Value="10 0 0 0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <DataTemplate x:Key="TM.ListBox.TaskCardViewTemplate">
        <Grid Height="65">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <WrapPanel Orientation="Vertical" ToolTip="{Binding Description}" MaxWidth="250" >
                <TextBlock Text="{Binding Name}" FontWeight="DemiBold" 
                           VerticalAlignment="Top" FontSize="15"  Margin="3 0 0 0" TextTrimming="CharacterEllipsis" />
                <TextBlock Text="{Binding Description,Converter={StaticResource TM.Converters.DescriptionToMessageConverter}}" FontSize="12"
                           Foreground="Black" Opacity="0.7"
                           TextTrimming="CharacterEllipsis"  VerticalAlignment="Center" Padding="3"/>
                <TextBlock Text="{Binding Category,Converter={StaticResource TM.Converters.EnumToDescriptionConverter}}" Foreground="DarkBlue"
                           VerticalAlignment="Bottom" FontSize="11" Opacity="0.5" Padding="3"/>
            </WrapPanel>

            <WrapPanel Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Right" >
                <iconPacks:PackIconBootstrapIcons Kind="ClockFill"  
                                              Height="11" VerticalAlignment="Bottom"
                                             Foreground="{Binding DueDate, Converter ={StaticResource TM.Converters.DueDateToColorConverter}}"
                                              Margin="0 0 0 4"/>
                <TextBlock Text="{Binding DueDate, Converter={StaticResource TM.Converters.DateTimeToStringConverter}}" 
                       FontSize="10" Padding="3" Margin="0 0 5 0" 
                       ToolTip="Due on"
                       Foreground="{Binding DueDate, Converter ={StaticResource TM.Converters.DueDateToColorConverter}}"/>
            </WrapPanel>
            <Button  Grid.Column="1" HorizontalAlignment="Center" Width="Auto" VerticalAlignment="Top" BorderThickness="0" Background="Transparent"
                    Foreground="{StaticResource TM.Colors.PrimaryColor}" 
                    ToolTip="Edit task" >
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource TM.Button.DefaultStyle}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsMouseOver}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

                <iconPacks:BoxIcons Kind="SolidPencil"  Height="15" Width="15"/>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click" >
                        <cal:ActionMessage MethodName="DisplayTaskById">
                            <cal:Parameter Value="{Binding Id}"/>
                        </cal:ActionMessage>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button  Grid.Column="1" HorizontalAlignment="Right"
                     Width="Auto" VerticalAlignment="Top" ToolTip="Delete task"
                    BorderThickness="0" Background="Transparent" Foreground="#E65B65"
                     Margin="0 0 5 0" >
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource TM.Button.DefaultStyle}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsMouseOver}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <iconPacks:BoxIcons Kind="SolidTrashAlt"  Height="15" Width="15"/>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <cal:ActionMessage MethodName="DeleteById">
                            <cal:Parameter Value="{Binding Id}" />
                            <cal:Parameter Value="{Binding Status}" />
                            <cal:Parameter Value="false" />
                        </cal:ActionMessage>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </Grid>
    </DataTemplate>

    <!--#endregion-->

</ResourceDictionary>